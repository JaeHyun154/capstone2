{"ast":null,"code":"var _jsxFileName = \"/Users/sonmyeongseong/Downloads/whyfall/src/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './Login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login({\n  onLogin\n}) {\n  _s();\n  const [userID, setUserID] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = async event => {\n    event.preventDefault();\n    const loginData = {\n      userID,\n      password\n    };\n    try {\n      const response = await axios.post('여기다가 주소 적어줘', loginData);\n\n      // 성공적인 응답 처리\n      if (response.status === 200) {\n        alert('Login Success');\n        onLogin(); // 로그인 상태 업데이트\n        navigate('/'); // 메인 화면으로 리디렉션\n      } else {\n        alert('Login Failed');\n        setErrorMessage('Login failed. Please try again.');\n      }\n    } catch (error) {\n      var _error$response;\n      console.error('Login failed:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      alert('Login Failed');\n      setErrorMessage('Login failed. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"main.png\",\n      alt: \"Main\",\n      className: \"mainImage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"loginForm\",\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"UserID\",\n        value: userID,\n        onChange: e => setUserID(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 30\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"hBOiT3FL7AQCmPVdzGHVZVcLGXo=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","Login","onLogin","_s","userID","setUserID","password","setPassword","errorMessage","setErrorMessage","navigate","handleLogin","event","preventDefault","loginData","response","post","status","alert","error","_error$response","console","data","message","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/sonmyeongseong/Downloads/whyfall/src/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './Login.css';\n\nfunction Login({ onLogin }) {\n    const [userID, setUserID] = useState('');\n    const [password, setPassword] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n    const navigate = useNavigate();\n\n    const handleLogin = async (event) => {\n        event.preventDefault(); \n        const loginData = {\n            userID,\n            password\n        };\n\n        try {\n            const response = await axios.post('여기다가 주소 적어줘', loginData); \n\n            // 성공적인 응답 처리\n            if (response.status === 200) {\n                alert('Login Success');\n                onLogin(); // 로그인 상태 업데이트\n                navigate('/'); // 메인 화면으로 리디렉션\n            } else {\n                alert('Login Failed');\n                setErrorMessage('Login failed. Please try again.');\n            }\n        } catch (error) {\n            console.error('Login failed:', error.response?.data || error.message);\n            alert('Login Failed'); \n            setErrorMessage('Login failed. Please try again.');\n        }\n    };\n\n    return (\n        <div className=\"loginPage\">\n            <img src=\"main.png\" alt=\"Main\" className=\"mainImage\" />\n            <form className=\"loginForm\" onSubmit={handleLogin}>\n                <input\n                    type=\"text\"\n                    placeholder=\"UserID\"\n                    value={userID}\n                    onChange={e => setUserID(e.target.value)}\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    value={password}\n                    onChange={e => setPassword(e.target.value)}\n                />\n                <button type=\"submit\">Login</button>\n            </form>\n            {errorMessage && <p className=\"error\">{errorMessage}</p>} {/* 에러 메시지 표시 */}\n        </div>\n    );\n}\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}