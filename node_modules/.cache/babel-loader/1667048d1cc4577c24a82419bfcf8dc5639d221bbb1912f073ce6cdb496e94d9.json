{"ast":null,"code":"var _jsxFileName = \"/Users/sonmyeongseong/Downloads/whyfall/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport Header from './Header';\nimport Body from './Body';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const imageRef = useRef(null);\n  const [buttonSize, setButtonSize] = useState(0); // 버튼 크기를 너비만 저장하는 상태로 변경\n  const [buttonVisible, setButtonVisible] = useState(false);\n  useEffect(() => {\n    function updateButtonSize() {\n      const width = imageRef.current.clientWidth; // 이미지 너비 가져오기\n      const minButtonWidth = 120;\n      const buttonWidth = width * 0.25; // 이미지 너비의 20%를 버튼 너비로 설정\n      setButtonSize(buttonWidth);\n    }\n    if (imageRef.current) {\n      imageRef.current.addEventListener('load', updateButtonSize);\n    }\n    window.addEventListener('resize', updateButtonSize);\n    updateButtonSize(); // 초기 버튼 크기 설정\n\n    setTimeout(() => {\n      setButtonVisible(true);\n    }, 1000); // 1초 후 버튼 표시\n\n    return () => {\n      if (imageRef.current) {\n        imageRef.current.removeEventListener('load', updateButtonSize);\n      }\n      window.removeEventListener('resize', updateButtonSize);\n    };\n  }, []);\n  const fontSize = Math.max(buttonSize / 10, 12);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainImageContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        ref: imageRef,\n        src: \"main.png\",\n        alt: \"Main Content\",\n        className: \"mainImage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mainImageButton\",\n        style: {\n          width: `${buttonSize}px`,\n          height: `${buttonSize / 3}px`,\n          fontSize: `${fontSize}px`,\n          // 버튼 너비의 10%를 글자 크기로 설정\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          opacity: buttonVisible ? 1 : 0,\n          transition: 'opacity 0.5s ease-in-out'\n        },\n        children: \"\\uB0B4 \\uC601\\uC0C1 \\uD53C\\uB4DC\\uBC31\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"48zn/UJdduScN3HfyuhK4Cvco0M=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Header","Body","jsxDEV","_jsxDEV","App","_s","imageRef","buttonSize","setButtonSize","buttonVisible","setButtonVisible","updateButtonSize","width","current","clientWidth","minButtonWidth","buttonWidth","addEventListener","window","setTimeout","removeEventListener","fontSize","Math","max","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","src","alt","style","height","top","left","transform","opacity","transition","_c","$RefreshReg$"],"sources":["/Users/sonmyeongseong/Downloads/whyfall/src/App.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport Header from './Header';\nimport Body from './Body';\nimport './App.css';\n\nfunction App() {\n    const imageRef = useRef(null);\n    const [buttonSize, setButtonSize] = useState(0); // 버튼 크기를 너비만 저장하는 상태로 변경\n    const [buttonVisible, setButtonVisible] = useState(false);\n\n    useEffect(() => {\n        function updateButtonSize() {\n            const width = imageRef.current.clientWidth; // 이미지 너비 가져오기\n            const minButtonWidth = 120;\n            const buttonWidth = width * 0.25; // 이미지 너비의 20%를 버튼 너비로 설정\n            setButtonSize(buttonWidth);\n        }\n\n        if (imageRef.current) {\n            imageRef.current.addEventListener('load', updateButtonSize);\n        }\n        \n        window.addEventListener('resize', updateButtonSize);\n        \n        updateButtonSize(); // 초기 버튼 크기 설정\n\n        setTimeout(() => {\n            setButtonVisible(true);\n        }, 1000);  // 1초 후 버튼 표시\n\n        return () => {\n            if (imageRef.current) {\n                imageRef.current.removeEventListener('load', updateButtonSize);\n            }\n            window.removeEventListener('resize', updateButtonSize);\n        };\n    }, []);\n\n    const fontSize = Math.max(buttonSize / 10, 12);  \n\n    return (\n        <div className=\"app\">\n            <Header />\n            <div className=\"mainImageContainer\">\n            <img ref={imageRef} src=\"main.png\" alt=\"Main Content\" className=\"mainImage\" />\n            <button className=\"mainImageButton\" style={{ \n                width: `${buttonSize}px`, \n                height: `${buttonSize / 3}px`,\n                fontSize: `${fontSize}px`, // 버튼 너비의 10%를 글자 크기로 설정\n                top: '50%', \n                left: '50%', \n                transform: 'translate(-50%, -50%)',\n                opacity: buttonVisible ? 1 : 0,\n                transition: 'opacity 0.5s ease-in-out'\n            }}>\n            내 영상 피드백\n            </button>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}