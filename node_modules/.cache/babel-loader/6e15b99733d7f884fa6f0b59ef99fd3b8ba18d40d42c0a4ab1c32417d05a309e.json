{"ast":null,"code":"var _jsxFileName = \"/Users/sonmyeongseong/Downloads/whyfall/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from 'react';\nimport Header from './Header';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const imageRef = useRef(null); // 이미지에 대한 참조를 생성\n  const [buttonTop, setButtonTop] = useState(0); // 버튼의 top 위치 상태\n\n  // 이미지의 로드와 윈도우 리사이즈 이벤트에 응답하여 버튼 위치를 업데이트\n  useEffect(() => {\n    function updateButtonPosition() {\n      // 이미지 높이의 절반 값을 계산\n      const height = imageRef.current.clientHeight / 2;\n      setButtonTop(height);\n    }\n\n    // 이미지 로드가 완료되면 버튼 위치를 업데이트\n    if (imageRef.current) {\n      imageRef.current.addEventListener('load', updateButtonPosition);\n    }\n\n    // 윈도우 리사이즈 시에도 버튼 위치를 업데이트\n    window.addEventListener('resize', updateButtonPosition);\n\n    // 현재 이미지 높이에 기반한 초기 버튼 위치 설정\n    updateButtonPosition();\n\n    // 클린업 함수에서 이벤트 리스너들을 제거\n    return () => {\n      if (imageRef.current) {\n        imageRef.current.removeEventListener('load', updateButtonPosition);\n      }\n      window.removeEventListener('resize', updateButtonPosition);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainImageContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        ref: imageRef,\n        src: \"main.png\",\n        alt: \"Main Content\",\n        className: \"mainImage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mainImageButton\",\n        style: {\n          top: `${buttonTop}px`\n        },\n        children: \"\\uB0B4 \\uC601\\uC0C1 \\uD53C\\uB4DC\\uBC31\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"zJR9G1pCOtFrvZoTnKriqACpQxc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Header","jsxDEV","_jsxDEV","App","_s","imageRef","buttonTop","setButtonTop","updateButtonPosition","height","current","clientHeight","addEventListener","window","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","src","alt","style","top","_c","$RefreshReg$"],"sources":["/Users/sonmyeongseong/Downloads/whyfall/src/App.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport Header from './Header';\nimport './App.css';\n\nfunction App() {\n    const imageRef = useRef(null); // 이미지에 대한 참조를 생성\n    const [buttonTop, setButtonTop] = useState(0); // 버튼의 top 위치 상태\n\n    // 이미지의 로드와 윈도우 리사이즈 이벤트에 응답하여 버튼 위치를 업데이트\n    useEffect(() => {\n        function updateButtonPosition() {\n            // 이미지 높이의 절반 값을 계산\n            const height = imageRef.current.clientHeight / 2;\n            setButtonTop(height);\n        }\n\n        // 이미지 로드가 완료되면 버튼 위치를 업데이트\n        if (imageRef.current) {\n            imageRef.current.addEventListener('load', updateButtonPosition);\n        }\n        \n        // 윈도우 리사이즈 시에도 버튼 위치를 업데이트\n        window.addEventListener('resize', updateButtonPosition);\n        \n        // 현재 이미지 높이에 기반한 초기 버튼 위치 설정\n        updateButtonPosition();\n\n        // 클린업 함수에서 이벤트 리스너들을 제거\n        return () => {\n            if (imageRef.current) {\n                imageRef.current.removeEventListener('load', updateButtonPosition);\n            }\n            window.removeEventListener('resize', updateButtonPosition);\n        };\n    }, []);\n\n    return (\n        <div className=\"app\">\n            <Header />\n            <div className=\"mainImageContainer\">\n                <img ref={imageRef} src=\"main.png\" alt=\"Main Content\" className=\"mainImage\" />\n                <button className=\"mainImageButton\" style={{ top: `${buttonTop}px` }}>내 영상 피드백하기</button>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAMC,QAAQ,GAAGR,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;EAC/B,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE/C;EACAC,SAAS,CAAC,MAAM;IACZ,SAASS,oBAAoBA,CAAA,EAAG;MAC5B;MACA,MAAMC,MAAM,GAAGJ,QAAQ,CAACK,OAAO,CAACC,YAAY,GAAG,CAAC;MAChDJ,YAAY,CAACE,MAAM,CAAC;IACxB;;IAEA;IACA,IAAIJ,QAAQ,CAACK,OAAO,EAAE;MAClBL,QAAQ,CAACK,OAAO,CAACE,gBAAgB,CAAC,MAAM,EAAEJ,oBAAoB,CAAC;IACnE;;IAEA;IACAK,MAAM,CAACD,gBAAgB,CAAC,QAAQ,EAAEJ,oBAAoB,CAAC;;IAEvD;IACAA,oBAAoB,CAAC,CAAC;;IAEtB;IACA,OAAO,MAAM;MACT,IAAIH,QAAQ,CAACK,OAAO,EAAE;QAClBL,QAAQ,CAACK,OAAO,CAACI,mBAAmB,CAAC,MAAM,EAAEN,oBAAoB,CAAC;MACtE;MACAK,MAAM,CAACC,mBAAmB,CAAC,QAAQ,EAAEN,oBAAoB,CAAC;IAC9D,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIN,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBd,OAAA,CAACF,MAAM;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVlB,OAAA;MAAKa,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBAC/Bd,OAAA;QAAKmB,GAAG,EAAEhB,QAAS;QAACiB,GAAG,EAAC,UAAU;QAACC,GAAG,EAAC,cAAc;QAACR,SAAS,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9ElB,OAAA;QAAQa,SAAS,EAAC,iBAAiB;QAACS,KAAK,EAAE;UAAEC,GAAG,EAAG,GAAEnB,SAAU;QAAI,CAAE;QAAAU,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAChB,EAAA,CAzCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AA2CZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}