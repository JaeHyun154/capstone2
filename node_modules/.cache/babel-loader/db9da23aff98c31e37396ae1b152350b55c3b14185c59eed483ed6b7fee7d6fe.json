{"ast":null,"code":"var _jsxFileName = \"/Users/sonmyeongseong/Downloads/whyfall/src/App.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const imageRef = useRef(null);\n  const [buttonSize, setButtonSize] = useState(0);\n  useEffect(() => {\n    function updateButtonSize() {\n      const width = imageRef.current.clientWidth;\n      const buttonWidth = width * 0.2;\n      setButtonSize(buttonWidth);\n    }\n    if (imageRef.current) {\n      imageRef.current.addEventListener('load', updateButtonSize);\n    }\n    window.addEventListener('resize', updateButtonSize);\n    updateButtonSize();\n    return () => {\n      if (imageRef.current) {\n        imageRef.current.removeEventListener('load', updateButtonSize);\n      }\n      window.removeEventListener('resize', updateButtonSize);\n    };\n  }, []);\n  const fontSize = Math.max(buttonSize / 10, 8); // 최소 글자 크기를 8px로 설정\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mainImageContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        ref: imageRef,\n        src: \"main.png\",\n        alt: \"Main Content\",\n        className: \"mainImage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mainImageButton\",\n        style: {\n          width: `${buttonSize}px`,\n          height: `${buttonSize / 3}px`,\n          fontSize: `${fontSize}px`,\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)'\n        },\n        children: \"\\uB0B4 \\uC601\\uC0C1 \\uD53C\\uB4DC\\uBC31\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"ffDWzwJ1Kjrx+q0IjXLNi5XsIh8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","_s","imageRef","useRef","buttonSize","setButtonSize","useState","useEffect","updateButtonSize","width","current","clientWidth","buttonWidth","addEventListener","window","removeEventListener","fontSize","Math","max","_jsxDEV","className","children","Header","fileName","_jsxFileName","lineNumber","columnNumber","ref","src","alt","style","height","top","left","transform","_c","$RefreshReg$"],"sources":["/Users/sonmyeongseong/Downloads/whyfall/src/App.js"],"sourcesContent":["function App() {\n    const imageRef = useRef(null);\n    const [buttonSize, setButtonSize] = useState(0); \n\n    useEffect(() => {\n        function updateButtonSize() {\n            const width = imageRef.current.clientWidth; \n            const buttonWidth = width * 0.2; \n            setButtonSize(buttonWidth);\n        }\n\n        if (imageRef.current) {\n            imageRef.current.addEventListener('load', updateButtonSize);\n        }\n        \n        window.addEventListener('resize', updateButtonSize);\n        \n        updateButtonSize(); \n\n        return () => {\n            if (imageRef.current) {\n                imageRef.current.removeEventListener('load', updateButtonSize);\n            }\n            window.removeEventListener('resize', updateButtonSize);\n        };\n    }, []);\n\n    const fontSize = Math.max(buttonSize / 10, 8); // 최소 글자 크기를 8px로 설정\n\n    return (\n        <div className=\"app\">\n            <Header />\n            <div className=\"mainImageContainer\">\n                <img ref={imageRef} src=\"main.png\" alt=\"Main Content\" className=\"mainImage\" />\n                <button className=\"mainImageButton\" style={{ \n                    width: `${buttonSize}px`, \n                    height: `${buttonSize / 3}px`,\n                    fontSize: `${fontSize}px`, \n                    top: '50%', \n                    left: '50%', \n                    transform: 'translate(-50%, -50%)'\n                }}>\n                    내 영상 피드백하기\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAMC,QAAQ,GAAGC,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGC,QAAQ,CAAC,CAAC,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACZ,SAASC,gBAAgBA,CAAA,EAAG;MACxB,MAAMC,KAAK,GAAGP,QAAQ,CAACQ,OAAO,CAACC,WAAW;MAC1C,MAAMC,WAAW,GAAGH,KAAK,GAAG,GAAG;MAC/BJ,aAAa,CAACO,WAAW,CAAC;IAC9B;IAEA,IAAIV,QAAQ,CAACQ,OAAO,EAAE;MAClBR,QAAQ,CAACQ,OAAO,CAACG,gBAAgB,CAAC,MAAM,EAAEL,gBAAgB,CAAC;IAC/D;IAEAM,MAAM,CAACD,gBAAgB,CAAC,QAAQ,EAAEL,gBAAgB,CAAC;IAEnDA,gBAAgB,CAAC,CAAC;IAElB,OAAO,MAAM;MACT,IAAIN,QAAQ,CAACQ,OAAO,EAAE;QAClBR,QAAQ,CAACQ,OAAO,CAACK,mBAAmB,CAAC,MAAM,EAAEP,gBAAgB,CAAC;MAClE;MACAM,MAAM,CAACC,mBAAmB,CAAC,QAAQ,EAAEP,gBAAgB,CAAC;IAC1D,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAACd,UAAU,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;;EAE/C,oBACIe,OAAA;IAAKC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBF,OAAA,CAACG,MAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVP,OAAA;MAAKC,SAAS,EAAC,oBAAoB;MAAAC,QAAA,gBAC/BF,OAAA;QAAKQ,GAAG,EAAEzB,QAAS;QAAC0B,GAAG,EAAC,UAAU;QAACC,GAAG,EAAC,cAAc;QAACT,SAAS,EAAC;MAAW;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9EP,OAAA;QAAQC,SAAS,EAAC,iBAAiB;QAACU,KAAK,EAAE;UACvCrB,KAAK,EAAG,GAAEL,UAAW,IAAG;UACxB2B,MAAM,EAAG,GAAE3B,UAAU,GAAG,CAAE,IAAG;UAC7BY,QAAQ,EAAG,GAAEA,QAAS,IAAG;UACzBgB,GAAG,EAAE,KAAK;UACVC,IAAI,EAAE,KAAK;UACXC,SAAS,EAAE;QACf,CAAE;QAAAb,QAAA,EAAC;MAEH;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACzB,EAAA,CA/CQD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AAiDZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}